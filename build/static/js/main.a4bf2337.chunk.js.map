{"version":3,"sources":["component/modal.js","component/car.js","App.js","serviceWorker.js","index.js"],"names":["Modal","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","carData","setState","data","_this2","_this$props","handleClose","show","changeInitData","customClassName","children","showHideClassName","react_default","a","createElement","className","onClick","value","style","marginLeft","marginTop","onChange","e","console","log","target","d","filter","actionType","checkFuel","sort","b","price","checkPrice","map","index","key","carType","display","height","color","fuelType","React","Component","require","Car","initData","_this$state","Fragment","keys","length","width","border","modal","version","App","car_Car","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a4bf2337.chunk.js","sourcesContent":["import React from 'react';\nimport './style.css';\n\nclass Modal extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n           carData : []\n        }\n    }\n    componentWillMount () {\n        this.setState({carData : this.props.data})\n    }\n    render() {\n        const { handleClose, show, customClassName, children, changeInitData, data } = this.props;\n        const showHideClassName = show ? \"modal display-block\" : \"modal display-none\";\n        const { carData } = this.state;\n        const checkFuel = (e) => {\n            console.log(e.target.value)\n            if(e.target.value === 'FuelType') {\n                this.setState({carData : data})\n            } else {\n            let d = data.filter((d) => d.actionType === e.target.value)\n            this.setState({carData : d})\n            }\n        }\n        const checkPrice = (e) => {\n            console.log(e.target.value)\n            if(e.target.value === 'SortBy') {\n                this.setState({carData : data})\n            } else if(e.target.value === 'HighToLow') {\n            let d = data.sort((a,b) => b.price - a.price)\n            this.setState({carData : d})\n            } else {\n                let d = data.sort((a,b) => a.price - b.price)\n                this.setState({carData : d})\n            }\n        }\n        //   const customClass = customClassName ? customClassName : null;\n        return (\n            <div className={showHideClassName}>\n                <section className=\"modal-main\">\n                    <span className=\"close-button\" onClick={handleClose} value=\"close\"> {`<   Select Version`} </span>\n                    <select style ={{ marginLeft : '15px', marginTop : '13px'}}onChange={(e)=> {checkFuel(e)}}>\n                        <option value=\"FuelType\">FuelType</option>\n                        <option value=\"Automatic\">Automatic</option>\n                        <option value=\"Manual\">Manual</option>\n                    </select>\n                    <select style ={{ marginLeft : '15px', marginTop : '13px'}}onChange={(e)=> {checkPrice(e)}}>\n                        <option value=\"SortBy\">SortBy</option>\n                        <option value=\"HighToLow\">HighToLow</option>\n                        <option value=\"LowToHigh\">LowToHigh</option>\n                    </select>\n                    <div style={{ marginTop: '30px' }}><br />\n                        <hr /></div>\n                    <div>\n                        {carData.map((d,index) => {\n                            return (\n                                <div key={index}onClick={() => { changeInitData(d.carType) }}>\n                                    <span style={{ display: 'block', height: '50%', marginLeft: '5px', color: 'grey' }}>{d.carType}</span>\n                                    <br />\n                                    <span style={{ display: 'inline-block', height: '50%', marginLeft: '5px', color: 'darkslategrey' }}>{d.fuelType}</span> |\n                                <span style={{ display: 'inline-block', height: '50%', marginLeft: '5px', color: 'darkslategrey' }}>{d.actionType}</span> |\n                                <span style={{ display: 'inline-block', height: '50%', marginLeft: '5px', color: 'darkslategrey' }}>{d.price}</span>\n                                    <br />\n                                    <hr />\n                                </div>\n                            )\n                        })}\n                    </div>\n                </section>\n            </div>\n        );\n    }\n};\n\nexport default Modal;","import React from 'react';\nimport Modal from './modal'\nconst data = require('./data.json')\n\nexport default class Car extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            initData: {},\n            carData: [],\n            show: false\n        }\n    }\n    componentDidMount() {\n        this.setState({ carData: data, initData: data[0] })\n    }\n     \n    render() {\n        const { initData, show, carData } = this.state;\n        const showModal = () => {\n            this.setState({ show: true });\n          };\n        \n        const hideModal = () => {\n            this.setState({ show: false });\n        };\n        const changeInitData = (version) => {\n         let d = carData.filter((d)=> d.carType === version)\n         this.setState({initData : d[0],show: false})\n        }\n        return (\n            <>\n                {Object.keys(initData).length && <div style={{\n                    height: '60px',\n                    width: '20%', border: '3px solid black',\n                    marginLeft: '100px',\n                    marginTop: '100px'\n                }}>\n                    <span style={{ display: 'block', height: '50%', marginLeft: '5px', marginTop: '7px', color: 'darkgrey' }}>Version</span>\n                    <span style={{ display: 'inline-block', height: '50%', marginLeft: '5px', color: 'darkslategrey' }}>{initData.carType}</span>\n                    <span style={{\n                        display: 'inline-block', marginLeft: '15px',\n                        color: 'darkgrey'\n                    }} onClick={showModal}> > </span>\n                </div>}\n                {show && <Modal show={this.state.show} handleClose={hideModal} data={carData} changeInitData={changeInitData}/>}\n            </>\n        )\n    }\n}","import React, { useEffect, useState } from 'react';\nimport Car from './component/car'\nimport './App.css';\nfunction App() {\n\n  return (\n    <div className=\"\">\n      <header className=\"\">\n        <>\n        <Car />\n        </>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}